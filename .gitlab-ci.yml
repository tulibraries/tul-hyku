---
include:
  - project: "infrastructure-engineering-shared/gitlab-ci-templates"
    file: 
      - "lint_docker.yaml"
      - "build_docker.yaml"
      - "security_scan.yaml"
      - "kubectl_commands.yaml"

variables:
  IMAGE: "tulibraries/tul-hyku"
  HARBOR: "harbor.k8s.temple.edu"
  HELM_EXPERIMENTAL_OCI: "1"

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

stages:
  - build
  - scan
  - tag
  - deploy

hyku.build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build web
    - docker-compose build worker
    - docker-compose push web
    - docker-compose push worker
  only:
    refs:
      - merge_requests
      - main
  tags:
    - local

hyku.dev:
  stage: deploy
  extends:
    - .deploy
  environment:
    name: hyku.dev
    url: http://hyku-dev.example.com
  only:
    refs:
      - main
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
    HELM_EXPERIMENTAL_OCI: 1
    HELM_EXTRA_ARGS: >
      --values ops/dev-deploy.yaml
  script:
    - envsubst < ops/dev-deploy.tmpl.yaml > ops/dev-deploy.yaml
    - ./bin/helm_deploy hyku-dev dev
  tags:
    - kubernetes

hyku.production:
  stage: deploy
  extends:
    - .deploy
  environment:
    name: hyku.production
    url: http://hyku-production.example.com
  only:
    refs:
      - main
  when: manual
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
    HELM_EXPERIMENTAL_OCI: 1
    HELM_EXTRA_ARGS: >
      --values ops/production-deploy.yaml
  script:
    - envsubst < ops/production-deploy.tmpl.yaml > ops/production-deploy.yaml
    - ./bin/helm_deploy hyku-production production
  tags:
    - kubernetes

.deploy:
  image: dtzar/helm-kubectl:3.5.3
